[{"path":"https://michalovadek.github.io/nmfbin/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 nmfbin authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://michalovadek.github.io/nmfbin/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michal Ovadek. Author, maintainer, copyright holder.","code":""},{"path":"https://michalovadek.github.io/nmfbin/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ovadek M (2023). nmfbin: Non-negative Matrix Factorization Binary Data. R package version 0.2.1, https://michalovadek.github.io/nmfbin/.","code":"@Manual{,   title = {nmfbin: Non-negative Matrix Factorization for Binary Data},   author = {Michal Ovadek},   year = {2023},   note = {R package version 0.2.1},   url = {https://michalovadek.github.io/nmfbin/}, }"},{"path":"https://michalovadek.github.io/nmfbin/index.html","id":"nmfbin-non-negative-matrix-factorization-for-binary-data","dir":"","previous_headings":"","what":"Non-negative Matrix Factorization for Binary Data","title":"Non-negative Matrix Factorization for Binary Data","text":"nmfbin R package provides simple Non-negative Matrix Factorization (NMF) implementation tailored binary data matrices. offers choice initialization methods, loss functions updating algorithms. NMF typically used reducing high-dimensional matrices lower (k-) rank ones k chosen user. Given non-negative matrix X size m × n, NMF looks two non-negative matrices W (m × k) H (k × n), : X ≈ W × H topic modelling, W interpreted document-topic matrix H topic-feature matrix. Unlike NMF packages, nmfbin focused binary (Boolean) data, keeping number dependencies minimum.","code":""},{"path":"https://michalovadek.github.io/nmfbin/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Non-negative Matrix Factorization for Binary Data","text":"can install development version nmfbin GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"michalovadek/nmfbin\")"},{"path":"https://michalovadek.github.io/nmfbin/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Non-negative Matrix Factorization for Binary Data","text":"input matrix can contain 0s 1s.","code":"# load library(nmfbin)  # Create a binary matrix for demonstration X <- matrix(sample(c(0, 1), 100, replace = TRUE), ncol = 10)  # Perform Logistic NMF results <- nmfbin(X, k = 3, optimizer = \"mur\", init = \"nndsvd\", max_iter = 1000)"},{"path":"https://michalovadek.github.io/nmfbin/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Non-negative Matrix Factorization for Binary Data","text":"","code":"@Manual{,   title = {nmfbin: Non-negative Matrix Factorization for Binary Data},   author = {Michal Ovadek},   year = {2023},   note = {R package version 0.2.1},   url = {https://michalovadek.github.io/nmfbin/}, }"},{"path":"https://michalovadek.github.io/nmfbin/index.html","id":"contributions","dir":"","previous_headings":"","what":"Contributions","title":"Non-negative Matrix Factorization for Binary Data","text":"Contributions nmfbin package welcome. Please submit pull requests open issue discussion.","code":""},{"path":"https://michalovadek.github.io/nmfbin/reference/nmfbin.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic Non-negative Matrix Factorization — nmfbin","title":"Logistic Non-negative Matrix Factorization — nmfbin","text":"function performs Logistic Non-negative Matrix Factorization (NMF) binary matrix.","code":""},{"path":"https://michalovadek.github.io/nmfbin/reference/nmfbin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic Non-negative Matrix Factorization — nmfbin","text":"","code":"nmfbin(   X,   k,   optimizer = \"mur\",   init = \"nndsvd\",   max_iter = 1000,   tol = 1e-06,   learning_rate = 0.001,   verbose = FALSE,   loss_fun = \"logloss\",   loss_normalize = TRUE,   epsilon = 1e-10 )"},{"path":"https://michalovadek.github.io/nmfbin/reference/nmfbin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic Non-negative Matrix Factorization — nmfbin","text":"X binary matrix (m x n) factorized. k number factors (components, topics). optimizer Type updating algorithm. mur NMF multiplicative update rules, gradient gradient descent, sgd stochastic gradient descent. init Method initializing factorization. default Nonnegative Double Singular Value Decomposition average densification. max_iter Maximum number iterations optimization. tol Convergence tolerance. optimization stops change loss less value. learning_rate Learning rate (step size) gradient descent optimization. verbose Print convergence TRUE. loss_fun Choice loss function: logloss (negative log-likelihood, also known binary cross-entropy) mse (mean squared error). loss_normalize Normalize loss matrix dimensions TRUE. epsilon Constant avoid log(0).","code":""},{"path":"https://michalovadek.github.io/nmfbin/reference/nmfbin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logistic Non-negative Matrix Factorization — nmfbin","text":"list containing: W: basis matrix (m x k). document-topic matrix topic modelling. H: coefficient matrix (k x n). Contribution features factors (topics). c: global threshold. constant. convergence: Divergence (loss) X every iter tol max_iter reached.","code":""},{"path":"https://michalovadek.github.io/nmfbin/reference/nmfbin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logistic Non-negative Matrix Factorization — nmfbin","text":"","code":"if (FALSE) { # Generate a binary matrix m <- 100 n <- 50 X <- matrix(sample(c(0, 1), m * n, replace = TRUE), m, n)  # Set the number of factors k <- 4  # Factorize the matrix with default settings result <- nmfbin(X, k) }"},{"path":"https://michalovadek.github.io/nmfbin/news/index.html","id":"nmfbin-021","dir":"Changelog","previous_headings":"","what":"nmfbin 0.2.1","title":"nmfbin 0.2.1","text":"documentation improvements removed final_loss already convergence","code":""},{"path":"https://michalovadek.github.io/nmfbin/news/index.html","id":"nmfbin-020","dir":"Changelog","previous_headings":"","what":"nmfbin 0.2.0","title":"nmfbin 0.2.0","text":"Full rewrite, simplification, improved terminology","code":""},{"path":"https://michalovadek.github.io/nmfbin/news/index.html","id":"nmfbin-010","dir":"Changelog","previous_headings":"","what":"nmfbin 0.1.0","title":"nmfbin 0.1.0","text":"Initial experimental release, buggy incomplete","code":""}]
