[{"path":"https://michalovadek.github.io/nmfbin/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 nmfbin authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://michalovadek.github.io/nmfbin/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michal Ovadek. Author, maintainer, copyright holder.","code":""},{"path":"https://michalovadek.github.io/nmfbin/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ovadek M (2023). nmfbin: Non-negative Matrix Factorization Binary Data. R package version 0.1.0, https://michalovadek.github.io/nmfbin/.","code":"@Manual{,   title = {nmfbin: Non-negative Matrix Factorization for Binary Data},   author = {Michal Ovadek},   year = {2023},   note = {R package version 0.1.0},   url = {https://michalovadek.github.io/nmfbin/}, }"},{"path":"https://michalovadek.github.io/nmfbin/index.html","id":"nmfbin-non-negative-matrix-factorization-for-binary-data","dir":"","previous_headings":"","what":"Non-negative Matrix Factorization for Binary Data","title":"Non-negative Matrix Factorization for Binary Data","text":"nmfbin R package provides simple Non-Negative Matrix Factorization (NMF) implementation tailored binary data matrices. offers choice divergence measures (Kullback-Leibler divergence binary cross-entropy) optimize factorization. Note package early stages development.","code":""},{"path":"https://michalovadek.github.io/nmfbin/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Non-negative Matrix Factorization for Binary Data","text":"can install development version nmfbin GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"michalovadek/nmfbin\")"},{"path":"https://michalovadek.github.io/nmfbin/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Non-negative Matrix Factorization for Binary Data","text":"Designed binary data matrices (comprising 0s 1s) Choice common loss functions Options initializing matrix factorization Includes measures divergence reduction","code":""},{"path":"https://michalovadek.github.io/nmfbin/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Non-negative Matrix Factorization for Binary Data","text":"input matrix can contain 0s 1s.","code":"library(nmfbin)  # Create a binary matrix for demonstration V <- matrix(sample(c(0, 1), 100, replace=TRUE), ncol=10)  # Perform NMF results <- nmfbin(V, k=3, divergence=\"kl\", compute_marginal_divergences=TRUE, init_method=\"random\")"},{"path":"https://michalovadek.github.io/nmfbin/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Non-negative Matrix Factorization for Binary Data","text":"","code":"@Manual{,   title = {nmfbin: Non-negative Matrix Factorization for Binary Data},   author = {Michal Ovadek},   year = {2023},   note = {R package version 0.1.0},   url = {https://michalovadek.github.io/nmfbin/}, }"},{"path":"https://michalovadek.github.io/nmfbin/index.html","id":"contributions","dir":"","previous_headings":"","what":"Contributions","title":"Non-negative Matrix Factorization for Binary Data","text":"Contributions nmfbin package welcome! Please submit pull requests open issue discussion.","code":""},{"path":"https://michalovadek.github.io/nmfbin/reference/nmfbin.html","id":null,"dir":"Reference","previous_headings":"","what":"Non-negative Matrix Factorization for Binary Data — nmfbin","title":"Non-negative Matrix Factorization for Binary Data — nmfbin","text":"Non-negative Matrix Factorization Binary Data","code":""},{"path":"https://michalovadek.github.io/nmfbin/reference/nmfbin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Non-negative Matrix Factorization for Binary Data — nmfbin","text":"","code":"nmfbin(   V,   k,   divergence_type = \"kl\",   init_method = \"random\",   max.iter = 100,   tol = 1e-05,   learning_rate = 0.01,   compute_marginal_divergences = FALSE )"},{"path":"https://michalovadek.github.io/nmfbin/reference/nmfbin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Non-negative Matrix Factorization for Binary Data — nmfbin","text":"V binary matrix (entries 0 1) factorize. k Number components. divergence_type Method divergence calculation. Choices \"kl\" Kullback-Leibler divergence \"crossentropy\" binary cross-entropy. init_method Method matrix factor initialization. Choices \"svd\" Singular Value Decomposition \"random\" random values. max.iter Maximum number iterations factor update algorithm. tol Tolerance convergence factor update algorithm. learning_rate Learning rate gradient descent (used divergence_type = \"crossentropy\"). compute_marginal_divergences Logical indicating whether compute marginal divergences.","code":""},{"path":"https://michalovadek.github.io/nmfbin/reference/nmfbin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Non-negative Matrix Factorization for Binary Data — nmfbin","text":"list containing factor matrices W H, final divergence, compute_marginal_divergences=TRUE, vector marginal divergences.","code":""},{"path":"https://michalovadek.github.io/nmfbin/reference/nmfbin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Non-negative Matrix Factorization for Binary Data — nmfbin","text":"","code":"# Create a small binary matrix V <- matrix(c(1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1), nrow = 3)  # Perform binary NMF with 2 components using KL divergence and random initialization result <- nmfbin(V, k = 2, divergence_type = \"kl\", init_method = \"random\")  # Print factor matrices print(result$W) #>              [,1]         [,2] #> [1,] 1.005274e+00 3.992284e-31 #> [2,] 3.204819e-09 1.382856e+00 #> [3,] 6.701828e-01 4.959178e-14 print(result$H) #>           [,1]      [,2]      [,3]      [,4]      [,5]      [,6] #> [1,] 0.6474869 0.6474869 0.0000000 0.0000000 0.6474869 1.2949737 #> [2,] 0.0000000 0.7844557 0.7844557 0.7844557 0.7844557 0.7844557  # Check the final divergence print(result$final_divergence) #> [1] 9.789299"},{"path":"https://michalovadek.github.io/nmfbin/news/index.html","id":"nmfbin-010","dir":"Changelog","previous_headings":"","what":"nmfbin 0.1.0","title":"nmfbin 0.1.0","text":"Initial experimental release, buggy incomplete","code":""}]
